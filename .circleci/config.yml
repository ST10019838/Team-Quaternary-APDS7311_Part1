version: 2.1

orbs:
  node: circleci/node@5
  sonarcloud: sonarsource/sonarcloud@2.0.0

executors:
  sonar-executor:
    docker:
      - image: circleci/node:16  # Use a Node.js image with npm
    working_directory: ~/project/application

jobs:
  # Job to run tests for the React app
  test:
    executor: sonar-executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install  # npm should be available
      - run:
          name: Run Tests
          command: npm test -- --watchAll=false

  # Job to run SonarCloud analysis
  sonar_scan:
    executor: sonar-executor
    steps:
      - checkout
      - run:
          name: Navigate to app folder
          command: cd application
      - run:
          name: Install SonarQube Scanner via npm
          command: npm install sonarqube-scanner --save-dev
      - run:
          name: Run SonarCloud Analysis
          command: |
            npx sonar-scanner \
            -Dsonar.projectKey=ST10019838_Team-Quaternary_APDS7311_POE \
            -Dsonar.organization=st10019838 \
            -Dsonar.sources=application/src \
            -Dsonar.host.url=https://sonarcloud.io/ \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.java.binaries=./build \
            -X

  # Job to test the Node.js app
  test-node:
    executor: node/default
    working_directory: ~/project/application
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm install jest-junit
      - run:
          name: Run tests
          command: npm run test --ci --runInBand --reporters=default --reporters=jest-junit
      - store_test_results:
          path: ./test-results/

  # Job to build the Node.js app
  build-node:
    executor: node/default
    working_directory: ~/project/application
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build

  # Job to build and analyze with SonarCloud
  build:
    docker:
      - image: node:latest
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - sonarcloud/scan

workflows:
  build-and-test:
    jobs:
      - test-node
      - build-node:
          requires:
            - test-node
      - sonar_scan:
          requires:
            - build-node  # Ensure sonar_scan runs after build-node
  build-and-test:
    jobs:
      - test-node
      - build-node:
          requires:
            - test-node
      - sonar_scan:
          requires:
            - build-node  # Ensure sonar_scan runs after build-node